package com.tomeraberbach.mano.assembly;

/* Tomer Aberbach
 * aberbat1@tcnj.edu
 * 11/12/2017
 * This code may be accessed and used by students at The College of New Jersey.
 */

/**
 * Class representing an assembly instruction. Used and generated by {@link Compiler#analyzeAndGenerate()}.
 */
public class Instruction {
    /**
     * Hex value representing the address of the assembly instruction in RAM.
     */
    private char address;

    /**
     * Hex value representing the assembly instruction in RAM.
     */
    private char hex;

    /**
     * Array of {@link Token} instances which represented the assembly instruction in assembly code.
     */
    private Token[] tokens;


    /**
     * @param address Hex value representing the address of the assembly instruction in RAM.
     * @param hex Hex value representing the assembly instruction in RAM.
     * @param tokens Array of {@link Token} instances which represented the assembly instruction in assembly code.
     */
    Instruction(char address, char hex, Token... tokens) {
        this.address = address;
        this.hex = hex;
        this.tokens = tokens;
    }


    /**
     * @return Four character hex digits {@link String} representing the {@link Instruction} instance in RAM.
     */
    @Override
    public String toString() {
        return pad(Integer.toHexString((int)hex)).toUpperCase();
    }

    /**
     * @return {@link Instruction#hex}
     */
    char hex() {
        return hex;
    }

    /**
     * @return {@link Instruction#address}
     */
    char address() {
        return address;
    }

    /**
     * @return {@link Instruction#tokens}
     */
    Token[] tokens() {
        return tokens;
    }

    /**
     * {@link Instruction#hex} setter.
     * @param hex Hex value representing the assembly instruction in RAM.
     */
    void setHex(char hex) {
        this.hex = hex;
    }

    /**
     * @param text {@link String} text to pad with zeros.
     * @return {@code text} but padded with zeros from the left so that it is four characters long.
     */
    private static String pad(String text) {
        StringBuilder builder = new StringBuilder();

        // Loops to pad the given text with zeros from the left if it is less than 4 characters in length
        while (builder.length() + text.length() < 4) {
            builder.append('0');
        }

        builder.append(text);

        return builder.toString();
    }
}
